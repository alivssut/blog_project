version: "3.9"
services:
  backend:
    build: ./backend
    command: gunicorn blog_project.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/backend
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis
      - elasticsearch
    environment:
      - "DJANGO_SECRET_KEY=django-insecure-hv1(e0r@v4n4m6gqdz%dn(60o=dsy8&@0_lbs8p-v3u^bs4)xl"
      - "DJANGO_DEBUG=True"
      - "DJANGO_SECURE_SSL_REDIRECT=False"
      - "DJANGO_SECURE_HSTS_SECONDS=0"
      - "DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS=False"
      - "DJANGO_SECURE_HSTS_PRELOAD=False"
      - "DJANGO_SESSION_COOKIE_SECURE=False"
      - "DJANGO_CSRF_COOKIE_SECURE=False"
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - 3000:3000
    environment:
      - "WATCHPACK_POLLING=true"
      - "CHOKIDAR_USEPOLLING=true"
      - "NODE_ENV=development"
    command: npm start
    depends_on:
      - backend
  db:
    image: postgres:13
    volumes:
      - 'postgres_data:/var/lib/postgresql/data/'
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
  redis:
    image: redis:5
    ports:
      - "6379:6379"
    volumes:
      - 'redisdata:/data'
    container_name: redis5_2
  elasticsearch:
    image: elasticsearch:8.9.1
    container_name: elasticsearch
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
volumes:
  postgres_data:
  redisdata:
  elasticsearch_data: